State {
  user : str;
  auth : num;
  C : chan;
  P : chan;
  T : chan;
}

Components {
  Connection "";
  Password "";
  Terminal "";
}

Messages {
  ReqAuth(str, str);
  Auth(str);
  ReqTerm(str);
  Term(str, fdesc);
}

Init {
  user = "";
  auth = 0;
  C = spawn(Connection);
  P = spawn(Password);
  T = spawn(Terminal);
}

Exchange(c) {
  Connection {
    ReqAuth(u, p) {
      send(P, ReqAuth(u, p));
    }
    ReqTerm(u)
    when (user !=s u) {}
    when (auth =n 1) {
      send(T, ReqTerm(u));
    }
  }
  Password {
    Auth(u) {
      user = u;
      auth = 1;
    }
  }
  Terminal {
    Term(u, t)
    when (user !=s u) {}
    when (auth =n 1) {
      send(C, Term(u, t));
    }
  }
}

Properties {
  FOO =
    Match {
      ( .*
        [recv(u, Auth(u))]
        &
        << c HASCHANTYPE Password >>)?
      [^send(_, Term(u, _))]*
    };
}
