Components :
  AccessControl "access-control.py" () ()
  Disk          "disk.py"           () ()
  Listener      "listener.py"       () ()
  Client         "client.py"        () (user:str, addr:str)

Messages :
  LoginReq(str, str, str)
  ACLoginReq(str, str, str)
  ClientExists(str, str)
  ACLoginResT(str, str)
  ACLoginResF(str, str)
  LoginResT(str, str)
  LoginResF(str, str)
  FileReq(str)
  ACFileReq(str, str, str)
  ACFileResT(str, str, str)
  ACFileResF(str, str, str)
  DFileReq(str, str, str)
  DFileRes(str, str, str, fd)
  FileRes(str, fd)
  FileResF(str)

State :

Operations :

Init :
  AC <- spawn AccessControl();
  D <- spawn Disk();
  L <- spawn Listener()

Handlers :
  When l:Listener sends LoginReq(u, p, a) respond:
    lookup AccessControl()
    { ac => send(ac, ACLoginReq(u, p, a)) }
    { nop }

  When ac:AccessControl sends ACLoginResT(u, a) respond:
    lookup Client(u, a)
    { cl => nop }
    { c <- spawn Client(u, a);
      lookup Listener()
      { l => send(l, LoginResT(u, a)) }
      { nop }
    }

  When ac:AccessControl sends ACLoginResF(u, a) respond:
    lookup Listener()    
    { l => send(l, LoginResF(u, a)) }
    { nop }

  When c:Client sends FileReq(r) respond:
    lookup AccessControl()
    { ac => send(ac, ACFileReq(c.user, c.addr, r)) }
    { nop }

  When ac:AccessControl sends ACFileResT(u, a, r) respond:
    lookup Disk()
    { d => send(d, DFileReq(u, a, r)) }
    { nop }

  When ac:AccessControl sends ACFileResF(u, a, r) respond:
    lookup Client(u, a)
    { c => send(c, FileResF(r)) }
    { nop }

  When d:Disk sends DFileRes(u, a, r, f) respond:
    lookup Client(u, a)
    { c => send(c, FileRes(r, f)) }
    { nop }

Properties :
  AccessCorrect:
    forall u, a, r:
      [Recv(AccessControl(), ACFileResT(u, a, r))]
      Enables
      [Send(Disk(), DFileReq(u, a, r))]

  AccessCorrectDisk:
    forall u, a, r, f:
      [Recv(Disk(), DFileRes(u, a, r, f))]
      Enables
      [Send(Client(u, a), FileRes(r, f))]

  AccessCorrectEnsures:
    forall u, a, r:
      [Recv(AccessControl(), ACFileResT(u, a, r))]
      Ensures
      [Send(Disk(), DFileReq(u, a, r))]

  AuthCorrect:
    forall u, a:
      [Recv(AccessControl(), ACLoginResT(u, a))]
      Enables
      [Spawn Client(u, a)]

  NoDupClients:
    forall u, a:
      [Spawn Client(u, a)]
      Disables
      [Spawn Client(u, a)]